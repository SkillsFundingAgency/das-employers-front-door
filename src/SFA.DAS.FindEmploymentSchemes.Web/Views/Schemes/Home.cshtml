@model HomeModel

<div id="scheme-home-outer-two-thirds" class="govuk-grid-row">
    <div id="scheme-home-inner-two-thirds" class="govuk-grid-column-two-thirds">
        <h1 id="scheme-home-inner-two-thirds-h1" class="govuk-heading-xl">Find training and employment schemes for your business</h1>
        <p id="scheme-home-inner-two-thirds-body" class="govuk-body">A range of government programmes, are available for employers who are considering hiring employees, offering work experience or upskilling existing staff. Some of which offer financial incentives. </p>
    </div>
</div>

<div id="scheme-home-filter-outer" class="govuk-grid-row app-filter-layout">
    <div id="scheme-home-filter-inner" class="govuk-grid-column-one-third app-filter-layout__filter">
        <div id="scheme-filter" class="das-filter app-filter @(Model.ShowSchemesOnMobileNoJavascript?"app-hide-on-mobile-no-js":"")" tabindex="0" data-module="app-show-hide">
            @*todo: need the show/hide filter buttons to work without js, otherwise after user filters/closes on mobile without js, they can't bring the filters back*@
            <form id="scheme-home-filter-form" action="/" method="post">
                <div id="scheme-home-filter-header-container" class="das-filter__header app-filter__header">
                    <h2 id="scheme-home-filter-header" class="das-filter__heading">Filter schemes to fit your business</h2>
                    <button id="close-filter" class="govuk-button govuk-button--secondary">Close</button>
                </div>
                <div id="scheme-filter-options" class="das-filter__body">
                    <div id="number-of-schemes-box">
                        <h3 id="number-of-schemes-heading" class="govuk-heading-s">Number of Schemes: <span id="number-of-schemes">@Model.Schemes.Count()</span></h3>
                    </div>
                        @foreach (var filterGroupModel in Model.FilterGroupModels)
                        {
                            @await Html.PartialAsync("_FilterGroupPartial", filterGroupModel)
                        }
                        
                        @*todo: when non-js don't close the filters box*@
                        <a id="clear-filters" class="govuk-link" href="/">Clear filters</a>
                    
                        <div id="scheme-home-filter-form-button-group" class="govuk-button-group app-js-desktop-hide">
                            <button id="filter-box-filter-schemes" class="govuk-button govuk-button--secondary govuk-!-margin-bottom-0">Filter schemes</button>
                        </div>
                </div>
            </form>
        </div>
    </div>
    <div id="scheme-home-schemes-container" class="govuk-grid-column-two-thirds app-filter-layout__content">
        <div id="scheme-home-schemes-container-inner" class="govuk-button-group">
            @if (Model.ShowSchemesOnMobileNoJavascript)
            {
                <form id="mobile-no-js-filter-form" method="post" action="/?show=filter">
                    <button class="govuk-button govuk-button--secondary app-show-on-mobile-no-js">Filter schemes</button>
                </form>
            }
            <a id="filter-schemes" class="govuk-button govuk-button--secondary das-js-show--inline" href="#scheme-filter" data-text-show="Filter schemes" data-text-hide="Hide filter">Filter schemes</a>
        </div>
        @foreach (var scheme in Model.Schemes)
        {
            @await Html.PartialAsync("_SchemePartial", scheme)
        }
    </div>
</div>

<script asp-add-nonce>
    /*todo: add home.js and include here for js only initialization??*/
    document.addEventListener("DOMContentLoaded", function() {
        $("#close-filter,#filter-box-filter-schemes").click(function(e) {

            $([document.documentElement, document.body]).animate({
                scrollTop: $("#scheme-home-filter-outer").offset().top
            }, 0);

            //todo: move this into a function
            //todo: ensure showHideEls is there (where we use it elsewhere?)
            $('#scheme-filter').addClass('app-show-hide__section--show');
            const schemeFilterShowHide = showHideEls['scheme-filter'];
            schemeFilterShowHide.showHideTarget(schemeFilterShowHide);

            e.preventDefault();
        });

        if (window.document.documentMode) {
            /* if the user agent is ie, fall back to non-js based filtering */
            $('.das-js-hide').show();
        }
        else {
            initFiltering();
        }
    });

</script>