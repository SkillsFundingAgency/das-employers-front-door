@model SchemeDetailsModel

@{
    ViewData["Title"] = Model?.Scheme?.Name?.Substring(0, Math.Min(Model?.Scheme?.Name?.Length ?? 64, 64));
}

@section BreadCrumbs {
    <a id="scheme-details-breadcrumb-back-link" href="/" class="govuk-back-link">Home</a>
}

@if (string.IsNullOrWhiteSpace(Model?.Scheme?.Url?.ToString()) ||
     string.IsNullOrWhiteSpace(Model?.Scheme?.Name?.ToString()) ||
     string.IsNullOrWhiteSpace(Model?.Scheme?.ShortDescription?.ToString()) ||
     string.IsNullOrWhiteSpace(Model?.Scheme?.ShortBenefits?.ToString()) ||
     string.IsNullOrWhiteSpace(Model?.Scheme?.ShortTime?.ToString()) ||
     Model?.Scheme?.Size == null || Model?.Scheme?.Size == 0
    ) {
    @section PreviewErrors {

        <h3>Errors</h3>
        <ul>
            @if (string.IsNullOrWhiteSpace(Model?.Scheme?.Url?.ToString())) {
                <li>Url must not be blank</li>
            }
            @if (string.IsNullOrWhiteSpace(Model?.Scheme?.Name?.ToString())) {
                <li>Name must not be blank</li>
            }
            @if (string.IsNullOrWhiteSpace(Model?.Scheme?.ShortDescription?.ToString())) {
                <li>ShortDescription must not be blank</li>
            }
            @if (string.IsNullOrWhiteSpace(Model?.Scheme?.ShortBenefits?.ToString())) {
                <li>ShortBenefits must not be blank</li>
            }
            @if (string.IsNullOrWhiteSpace(Model?.Scheme?.ShortTime?.ToString())) {
                <li>ShortTime must not be blank</li>
            }
            @if (Model?.Scheme?.Size == null || Model?.Scheme?.Size == 0) {
                <li>Size must not be blank</li>
            }
        </ul>
    }
} else {

<div id="scheme-details-outer" class="govuk-grid-row">
    <div id="scheme-details-inner-two-thirds" class="govuk-grid-column-two-thirds">
        <h1 id="scheme-details-h1" class="govuk-heading-l">
            @Model?.Scheme?.Name
        </h1>
        @if (Model?.Scheme?.DetailsPageOverride != null)
        {
            @Model?.Scheme?.DetailsPageOverride
        }
        else
        {
            @Model?.Scheme?.Description

            if (Model?.Scheme?.SubSchemes != null && Model.Scheme.SubSchemes.Any())
            {
                <div class="govuk-accordion" data-module="govuk-accordion" id="sub-scheme-accordion">

                    @{
                        int ordinal = 0;
                        foreach (var subScheme in Model.Scheme.SubSchemes)
                        {
                            @await Html.PartialAsync("_AccordionSectionPartial", ("subscheme", ordinal++, subScheme))
                        }
                    }
                </div>
            }
            else
            {
            <h2 id="scheme-details-h2-cost" class="govuk-heading-m"> Employer cost </h2>
            @Model?.Scheme?.Cost  
            <h2 id="scheme-details-h2-responsibility" class="govuk-heading-m"> Employer responsibilities </h2>
            @Model?.Scheme?.Responsibility
            <h2 id="scheme-details-h2-benefits" class="govuk-heading-m">Benefits of @Model?.Scheme?.Name</h2>
            @Model?.Scheme?.Benefits
            int numberOfCaseStudies = Model?.Scheme?.CaseStudies?.Count() ?? 0;

            @if (Model?.Scheme?.CaseStudiesPreamble != null || numberOfCaseStudies > 0)
            {
                <h2 id="scheme-details-h2-case-studies" class="govuk-heading-m">Case studies</h2>

                @if (Model?.Scheme?.CaseStudiesPreamble != null)
                {
                    @Model?.Scheme?.CaseStudiesPreamble
                }

                foreach (CaseStudy study in Model?.Scheme?.CaseStudies ?? Enumerable.Empty<CaseStudy>())
                {
                    if (numberOfCaseStudies > 1)
                    {
                        <details class="govuk-details" data-module="govuk-details">
                            <summary class="govuk-details__summary">
                                <span class="govuk-details__summary-text">
                                    @study.DisplayTitle
                                </span>
                            </summary>
                            <div class="govuk-details__text">
                                @study.Content
                            </div>
                        </details>
                    }
                    else
                    {
                        <h3 id="scheme-details-h3-case-studies">@study.DisplayTitle</h3>
                        @study.Content
                    }
                }
            }

            <section id="scheme-details-section-offer-header" class="cx-cta-box">
                <h2 id="scheme-details-h2-offer-header" class="govuk-heading-m">@Model?.Scheme?.OfferHeader</h2>
                @Model?.Scheme?.Offer
            </section>
        }
        }
	</div>
	<div class="govuk-grid-column-one-third">
		<h3 class="govuk-heading-m">Explore schemes</h3>
        <ul id="explore-schemes" class="govuk-list">
            @foreach (Scheme scheme in Model?.Schemes ?? Enumerable.Empty<Scheme>())
            {
                bool currentScheme = scheme == Model?.Scheme;
                <li id="scheme-details-inner-li-@scheme.HtmlId" class="@(currentScheme ? "explore-schemes-current-scheme" : "")">
                    @if (currentScheme)
                    {
                        @scheme.Name
                    }
                    else
                    {
                        <a id="scheme-details-inner-link-@scheme.HtmlId" asp-route="schemes" asp-route-schemeUrl="@scheme.Url" class="govuk-link">@scheme.Name</a>
                    }
                </li>
            }
        </ul>
    </div>
</div>

}

@section AdditionalFooter {
    @Model?.Scheme?.AdditionalFooter
}
