@model SchemeDetailsModel

@{
    ViewData["Title"] = Model.Scheme.Name.Substring(0, Math.Min(Model.Scheme.Name.Length, 64));
}

@section BreadCrumbs {
    <a id="scheme-details-breadcrumb-back-link" href="/" class="govuk-back-link">Home</a>
}

<div id="scheme-details-outer" class="govuk-grid-row">
    <div id="scheme-details-inner-two-thirds" class="govuk-grid-column-two-thirds">
        <h1 id="scheme-details-h1" class="govuk-heading-l">
            @Model.Scheme.Name
        </h1>
        @if (Model.Scheme.DetailsPageOverride != null)
        {
            @Model.Scheme.DetailsPageOverride
        }
        else
        {
            @Model.Scheme.Description

            if (Model.Scheme.SubSchemes.Any())
            {
                <div class="govuk-accordion" data-module="govuk-accordion" id="sub-scheme-accordion">

                    @{
                        int ordinal = 0;
                        foreach (var subScheme in Model.Scheme.SubSchemes)
                        {
                            @await Html.PartialAsync("_AccordionSectionPartial", ("subscheme", ordinal++, subScheme))
                        }
                    }
                </div>
            }
            else
            {
                <h2 id="scheme-details-h2-cost" class="govuk-heading-m"> Employer cost </h2>
                @Model.Scheme.Cost
                <h2 id="scheme-details-h2-responsibility" class="govuk-heading-m"> Employer responsibilities </h2>
                @Model.Scheme.Responsibility
                <h2 id="scheme-details-h2-benefits" class="govuk-heading-m">Benefits of @Model.Scheme.Name</h2>
                @Model.Scheme.Benefits
                int numberOfCaseStudies = Model.Scheme.CaseStudies.Count();

                @if (Model.Scheme.CaseStudiesPreamble != null || numberOfCaseStudies > 0)
                {
                    <h2 id="scheme-details-h2-case-studies" class="govuk-heading-m">Case studies</h2>

                    @if (Model.Scheme.CaseStudiesPreamble != null)
                    {
                        @Model.Scheme.CaseStudiesPreamble
                    }

                    foreach (CaseStudy study in Model.Scheme.CaseStudies)
                    {
                        if (numberOfCaseStudies > 1)
                        {
                            <details class="govuk-details" data-module="govuk-details">
                                <summary class="govuk-details__summary">
                                    <span class="govuk-details__summary-text">
                                        @study.DisplayTitle
                                    </span>
                                </summary>
                                <div class="govuk-details__text">
                                    @study.Content
                                </div>
                            </details>
                        }
                        else
                        {
                            <h3 id="scheme-details-h3-case-studies">@study.DisplayTitle</h3>
                            @study.Content
                        }
                    }
                }

                <section id="scheme-details-section-offer-header" class="cx-cta-box">
                    <h2 id="scheme-details-h2-offer-header" class="govuk-heading-m">@Model.Scheme.OfferHeader</h2>
                    @Model.Scheme.Offer
                </section>
            }
        }
    </div>
    <div id="scheme-details-inner-one-third" class="govuk-grid-column-one-third">
        <h3 id="scheme-details-inner-h3" class="govuk-heading-m">Other schemes</h3>
        <ul id="scheme-details-inner-ul" class="govuk-list">
            @foreach (Scheme scheme in Model.OtherSchemes)
            {
                <li id="scheme-details-inner-li-@scheme.HtmlId">
                    <a id="scheme-details-inner-link-@scheme.HtmlId" asp-route="schemes" asp-route-schemeUrl="@scheme.Url" class="govuk-link">@scheme.Name</a>
                </li>
            }
        </ul>
    </div>
</div>

@section AdditionalFooter {
    @Model.Scheme.AdditionalFooter
}